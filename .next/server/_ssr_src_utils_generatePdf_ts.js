"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_src_utils_generatePdf_ts";
exports.ids = ["_ssr_src_utils_generatePdf_ts"];
exports.modules = {

/***/ "(ssr)/./src/utils/generatePdf.ts":
/*!**********************************!*\
  !*** ./src/utils/generatePdf.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatePdf: () => (/* binding */ generatePdf)\n/* harmony export */ });\n/* harmony import */ var pdf_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdf-lib */ \"(ssr)/./node_modules/pdf-lib/es/index.js\");\n\nconst CONTACT_LINE = \"MOBILE: 9810421233, 7018227126,  EMAIL: shehjarcaterers@gmail.com\";\nasync function generatePdf(base) {\n    const pdfDoc = await pdf_lib__WEBPACK_IMPORTED_MODULE_0__.PDFDocument.create();\n    const fontRegular = await pdfDoc.embedFont(pdf_lib__WEBPACK_IMPORTED_MODULE_0__.StandardFonts.TimesRoman);\n    const fontBold = await pdfDoc.embedFont(pdf_lib__WEBPACK_IMPORTED_MODULE_0__.StandardFonts.TimesRomanBold);\n    // Cover Page\n    const coverPage = pdfDoc.addPage([\n        595.28,\n        841.89\n    ]); // A4 size\n    let y = 700;\n    // Embed logo image (centered)\n    try {\n        const logoRes = await fetch(\"/logo.png\");\n        if (logoRes.ok) {\n            const logoBytes = await logoRes.arrayBuffer();\n            const logoImage = await pdfDoc.embedPng(logoBytes);\n            const logoWidth = Math.min(logoImage.width, 200);\n            const logoHeight = logoImage.height * (logoWidth / logoImage.width);\n            coverPage.drawImage(logoImage, {\n                x: (595.28 - logoWidth) / 2,\n                y: y + 80,\n                width: logoWidth,\n                height: logoHeight\n            });\n        }\n    } catch  {}\n    // Contact line\n    coverPage.drawText(CONTACT_LINE, {\n        x: 297.64 - fontBold.widthOfTextAtSize(CONTACT_LINE, 12) / 2,\n        y: y + 40,\n        size: 12,\n        font: fontBold,\n        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0)\n    });\n    // MENU title\n    coverPage.drawText(\"MENU\", {\n        x: 297.64 - fontBold.widthOfTextAtSize(\"MENU\", 24) / 2,\n        y: y,\n        size: 24,\n        font: fontBold,\n        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0)\n    });\n    // Client name\n    coverPage.drawText(base.clientName, {\n        x: 297.64 - fontBold.widthOfTextAtSize(base.clientName, 20) / 2,\n        y: y - 40,\n        size: 20,\n        font: fontBold,\n        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0)\n    });\n    // Table pages per date\n    const rowsSorted = [\n        ...base.rows\n    ].sort((a, b)=>a.date.localeCompare(b.date));\n    const groups = {};\n    for (const r of rowsSorted){\n        groups[r.date] = groups[r.date] || [];\n        groups[r.date].push(r);\n    }\n    Object.entries(groups).forEach(([date, group])=>{\n        const page = pdfDoc.addPage([\n            595.28,\n            841.89\n        ]);\n        let y = 800;\n        const headers = [\n            \"Date\",\n            \"Particulars\",\n            \"Menu\",\n            \"Time\",\n            \"No. of persons\"\n        ];\n        // Draw table header with borders\n        headers.forEach((h, i)=>{\n            page.drawText(h, {\n                x: 50 + i * 100,\n                y,\n                size: 12,\n                font: fontBold,\n                color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0)\n            });\n            page.drawRectangle({\n                x: 50 + i * 100,\n                y: y - 2,\n                width: 100,\n                height: 25,\n                borderColor: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0),\n                borderWidth: 1\n            });\n        });\n        y -= 25;\n        // Table rows\n        const span = group.length;\n        group.forEach((r, idx)=>{\n            let x = 50;\n            const menuLines = (r.menu ?? \"\").split(/\\r?\\n/).filter((l)=>l.trim() !== \"\");\n            const menuHeight = menuLines.length ? menuLines.length * 15 : 20;\n            const rowHeight = Math.max(20, menuHeight);\n            // Draw row cell borders\n            for(let col = 0; col < 5; col++){\n                page.drawRectangle({\n                    x: 50 + col * 100,\n                    y: y - 2,\n                    width: 100,\n                    height: rowHeight,\n                    borderColor: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0),\n                    borderWidth: 1\n                });\n            }\n            // Date cell: only for first row, center\n            if (idx === 0) {\n                page.drawText(date, {\n                    x,\n                    y: y + rowHeight / 2 - 6,\n                    size: 12,\n                    font: fontBold,\n                    color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0)\n                });\n            }\n            x += 100;\n            // Particulars: center, bold, Times New Roman, size 12\n            page.drawText(r.particulars, {\n                x,\n                y: y + rowHeight / 2 - 6,\n                size: 12,\n                font: fontBold,\n                color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0),\n                maxWidth: 90\n            });\n            x += 100;\n            // Menu: Times New Roman, size 11, spacing below\n            if (menuLines.length) {\n                menuLines.forEach((line, i)=>{\n                    page.drawText(line, {\n                        x,\n                        y: y + rowHeight - (i + 1) * 15,\n                        size: 11,\n                        font: fontRegular,\n                        color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0),\n                        maxWidth: 90\n                    });\n                });\n            } else {\n                page.drawText(\"â€”\", {\n                    x,\n                    y: y + rowHeight / 2 - 6,\n                    size: 11,\n                    font: fontRegular,\n                    color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0),\n                    maxWidth: 90\n                });\n            }\n            x += 100;\n            // Time: center\n            page.drawText(r.time || \"\", {\n                x,\n                y: y + rowHeight / 2 - 6,\n                size: 11,\n                font: fontRegular,\n                color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0),\n                maxWidth: 90\n            });\n            x += 100;\n            // No. of persons: center, blank if 0\n            page.drawText(r.numPersons === 0 ? \"\" : String(r.numPersons), {\n                x,\n                y: y + rowHeight / 2 - 6,\n                size: 11,\n                font: fontRegular,\n                color: (0,pdf_lib__WEBPACK_IMPORTED_MODULE_0__.rgb)(0, 0, 0),\n                maxWidth: 90\n            });\n            y -= rowHeight;\n        });\n    });\n    const pdfBytes = await pdfDoc.save();\n    const blob = new Blob([\n        new Uint8Array(pdfBytes)\n    ], {\n        type: \"application/pdf\"\n    });\n    const safeName = base.clientName.trim().replace(/\\s+/g, \"_\");\n    const filename = `menu_${safeName}.pdf`;\n    return {\n        blob,\n        filename\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/utils/generatePdf.ts\n");

/***/ })

};
;